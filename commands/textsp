const axios = require('axios');
const fs = require('fs');
const path = require('path');
const FormData = require('form-data');

module.exports = {
  name: "textsp",
  description: "Convert text to speech using ElevenLabs (choose language + female voice).",
  async execute(senderId, args, pageAccessToken) {
    const apiKey = "sk_8baa1a83eeced02269e805f994eb75857f6b5bb26f7c9e96"; // Your ElevenLabs API Key

    if (!args.length) {
      return "⚠️ | Please provide text.\nExample: `-tts en Hello, how are you?`";
    }

    // Extract language code and text
    const langCode = args[0].toLowerCase();
    const text = args.slice(1).join(" ").trim();

    if (!text) {
      return "⚠️ | Please provide the text after the language code.\nExample: `-tts en I love Jesus`";
    }

    // Language-to-voice mapping (female voices)
    const voices = {
      en: "21m00Tcm4TlvDq8ikWAM", // English (Rachel)
      es: "EXAVITQu4vr4xnSDxMaL", // Spanish
      fr: "TxGEqnHWrfWFTfGW9XjX", // French
      de: "ErXwobaYiN019PkySvjV", // German
      it: "yoZ06aMxZJJ28mfd3POQ", // Italian
      hi: "MF3mGyEYCl7XYWbV9V6O", // Hindi
      pt: "AZnzlk1XvdvUeBnXmlld", // Portuguese
      ar: "ZQe5CZNOzWyzPSCn5a3c", // Arabic
      jp: "N2lVS1w4EtoT3dr4eOWO", // Japanese
    };

    const voiceId = voices[langCode] || voices["en"]; // default to English if unknown

    try {
      const response = await axios.post(
        `https://api.elevenlabs.io/v1/text-to-speech/${voiceId}`,
        {
          text,
          voice_settings: { stability: 0.75, similarity_boost: 0.75 }
        },
        {
          headers: {
            "xi-api-key": apiKey,
            "Content-Type": "application/json"
          },
          responseType: "arraybuffer"
        }
      );

      const audioBuffer = response.data;
      const tempPath = path.join(__dirname, 'tts.mp3');
      fs.writeFileSync(tempPath, audioBuffer);

      // Upload the file using file.io
      const form = new FormData();
      form.append('file', fs.createReadStream(tempPath));

      const upload = await axios.post('https://file.io/?expires=1d', form, {
        headers: form.getHeaders(),
      });

      const audioUrl = upload.data.link;

      // Send the audio via Messenger
      await axios.post(
        `https://graph.facebook.com/v17.0/me/messages?access_token=${pageAccessToken}`,
        {
          recipient: { id: senderId },
          message: {
            attachment: {
              type: "audio",
              payload: {
                url: audioUrl,
                is_reusable: false
              }
            }
          }
        }
      );

      fs.unlinkSync(tempPath);
    } catch (error) {
      console.error("TTS Error:", error.message);
      return "❌ | Error generating voice. Try again or use a different language code.";
    }
  }
};
